---
# Include variables and define needed variables.
- name: Include OS-specific variables.
  include_vars: "Debian.yml"

- name: Define apache_packages.
  set_fact:
    apache_packages: "{{ __apache_packages | list }}"
  when: apache_packages is not defined

# Setup/install tasks.
- name: Update apt cache.
  apt: update_cache=yes cache_valid_time=3600

- name: Ensure Apache is installed on Debian.
  apt: "name={{ apache_packages }} state={{ apache_packages_state }}"

# Figure out what version of Apache is installed.
- name: Get installed version of Apache.
  command: "{{ apache_daemon_path }}{{ apache_daemon }} -v"
  changed_when: false
  check_mode: false
  register: _apache_version

- name: Create apache_version variable.
  set_fact:
    apache_version: "{{ _apache_version.stdout.split()[2].split('/')[1] }}"

- name: Include Apache 2.4 variables.
  include_vars: apache-24.yml
  when: "apache_version.split('.')[1] == '4'"

- name: Enable Apache mods.
  file:
    src: "{{ apache_server_root }}/mods-available/{{ item }}"
    dest: "{{ apache_server_root }}/mods-enabled/{{ item }}"
    state: link
  with_items: "{{ apache_mods_enabled }}"
  notify: restart apache

- name: Disable Apache mods.
  file:
    path: "{{ apache_server_root }}/mods-enabled/{{ item }}"
    state: absent
  with_items: "{{ apache_mods_disabled }}"
  notify: restart apache

- name: Check whether certificates defined in vhosts exist.
  stat: "path={{ item.certificate_file }}"
  register: apache_ssl_certificates
  with_items: "{{ apache_vhosts_ssl }}"

- name: Remove default port configuration
  copy: dest="{{ apache_conf_path }}/ports.conf" content='' force=yes

- name: Add apache vhosts configuration.
  template:
    src: "{{ apache_vhosts_template }}"
    dest: "{{ apache_conf_path }}/sites-available/{{ apache_vhosts_filename }}"
    owner: root
    group: root
    mode: 0644
  notify: restart apache
  when: apache_create_vhosts | bool

- name: Add vhost symlink in sites-enabled.
  file:
    src: "{{ apache_conf_path }}/sites-available/{{ apache_vhosts_filename }}"
    dest: "{{ apache_conf_path }}/sites-enabled/{{ apache_vhosts_filename }}"
    state: link
  notify: restart apache
  when: apache_create_vhosts | bool

- name: Remove default vhost in sites-enabled.
  file:
    path: "{{ apache_conf_path }}/sites-enabled/{{ apache_default_vhost_filename }}"
    state: absent
  notify: restart apache
  when: apache_remove_default_vhost

- name: Ensure Apache has selected state and enabled on boot.
  service:
    name: "{{ apache_service }}"
    state: "{{ apache_state }}"
    enabled: true
    use: "{{ gestionnaire_service }}"

